// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// output //
// ------ //

#define output_wrap_target 0
#define output_wrap 8

#define output_offset_entry_point 7u

static const uint16_t output_program_instructions[] = {
            //     .wrap_target
    0x6901, //  0: out    pins, 1         side 1 [1] 
    0x4001, //  1: in     pins, 1         side 0     
    0x0040, //  2: jmp    x--, 0          side 0     
    0x6801, //  3: out    pins, 1         side 1     
    0xa822, //  4: mov    x, y            side 1     
    0x4001, //  5: in     pins, 1         side 0     
    0x00e0, //  6: jmp    !osre, 0        side 0     
    0x91e0, //  7: pull   ifempty block   side 2 [1] 
    0xa142, //  8: nop                    side 0 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program output_program = {
    .instructions = output_program_instructions,
    .length = 9,
    .origin = -1,
};

static inline pio_sm_config output_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + output_wrap_target, offset + output_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}

void output_program_init(PIO pio, uint sm, uint offset, uint pin, float div) 
{
    pio_sm_config c = output_program_get_default_config(offset);
    pio_gpio_init(pio, 3);
    pio_gpio_init(pio, 4);
    pio_gpio_init(pio, 5);
    pio_gpio_init(pio, 6);
    pio_sm_set_consecutive_pindirs(pio, sm, 4, 1, true);
    pio_sm_set_consecutive_pindirs(pio, sm, 3, 1, false);
    pio_sm_set_consecutive_pindirs(pio, sm, 5, 1, true);
    pio_sm_set_consecutive_pindirs(pio, sm, 6, 1, true);
    sm_config_set_out_pins(&c, 4, 1);
    sm_config_set_in_pins(&c, 3);
    sm_config_set_sideset_pins(&c, 5);
    sm_config_set_out_shift(&c, false, true, 24);
    sm_config_set_in_shift(&c, false, true, 24);
    sm_config_set_clkdiv(&c, div);
    pio_sm_init(pio, sm, offset, &c);
}

#endif

